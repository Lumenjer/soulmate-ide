# Commented while we wait for the new Electron versions to ship

name: Build/release

on:
  push:
    tags:
      - "v*"
      - "osx-test-*"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    strategy:
      matrix:
        os: [macos-10.15] # [windows-latest,

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check out Git repository
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified

      - name: Print python stuff
        if: startsWith(matrix.os, 'macos')
        run: |
          which python3
          python3 --version
          which python
          python --version
          echo "::set-env name=NODE_GYP_FORCE_PYTHON::python3"

      - name: Setup Xcode version
        if: startsWith(matrix.os, 'macos')
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: latest

      - name: Install Node.js, NPM and Yarn for Mac
        if: startsWith(matrix.os, 'macos')
        uses: actions/setup-node@v1
        with:
          node-version: 15 # v15 causes "Error: Command failed: yarn" in Windows?

      - name: Install Node.js, NPM and Yarn for Windows
        if: startsWith(matrix.os, 'windows')
        uses: actions/setup-node@v1
        with:
          node-version: 12 # v15 causes "Error: Command failed: yarn" in Windows?

      - uses: actions/cache@v2.1.0
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        run: |
          yarn install
          yarn clean
          yarn node-gyp clean

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Build
        run: "yarn build"

      - name: Release Mac
        if: startsWith(matrix.os, 'macos')
        run: "yarn run electron-builder -m --publish always"
        env:
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
          CSC_LINK: ${{ secrets.mac_certs }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}

      - name: Release Windows
        if: startsWith(matrix.os, 'windows')
        run: "yarn run electron-builder -w --publish always"

      - name: List dmgs
        run: "ls dist/*.dmg"

      - name: Check Soulmate app file
        if: startsWith(matrix.os, 'macos')
        run: |
          file dist/mac-arm64/Soulmate.app/Contents/MacOS/Soulmate
          file dist/mac/Soulmate.app/Contents/MacOS/Soulmate
